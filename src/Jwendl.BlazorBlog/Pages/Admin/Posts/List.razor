@page "/admin/posts"

@using Jwendl.BlazorBlog.Data.Blog
@using Jwendl.BlazorBlog.Data.Blog.Models
@using Microsoft.EntityFrameworkCore

@inject IDbContextFactory<BlogContext> _dbContextFactory
@attribute [Authorize]

<MudNavLink Href="/admin/posts/create" Icon="@Icons.Material.Filled.Create">Create Post</MudNavLink>

<MudDataGrid Items="@_posts" SortMode="SortMode.Multiple" Filterable="true" QuickFilter="@_quickFilter">
	<ToolBarContent>
		<MudText Typo="Typo.h6">Manage Posts</MudText>
		<MudSpacer />
		<MudTextField @bind-Value="_searchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="true" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
	</ToolBarContent>
	<Columns>
		<PropertyColumn Property="x => x.StaticId" Title="Static Id" />
		<PropertyColumn Property="x => x.Title" Title="Title" />
		<TemplateColumn CellClass="d-flex justify-end">
			<CellTemplate>
				<MudStack Row>
					<MudNavLink Href="@($"/admin/posts/edit/{context.Item.StaticId}")" Title="Edit Post" Icon="@Icons.Material.Filled.EditNote" />
					<MudNavLink Href="@($"/admin/posts/delete/{context.Item.StaticId}")" Title="Delete Post" Icon="@Icons.Material.Filled.Delete" />
				</MudStack>
			</CellTemplate>
		</TemplateColumn>
	</Columns>
	<PagerContent>
		<MudDataGridPager T="Post" />
	</PagerContent>
</MudDataGrid>

@code {
	private IEnumerable<Post> _posts;
	private string _searchString;

	private Func<Post, bool> _quickFilter => x =>
	{
		if (string.IsNullOrWhiteSpace(_searchString))
		{
			return true;
		}

		if (x.StaticId.ToString().Contains(_searchString, StringComparison.OrdinalIgnoreCase))
		{
			return true;
		}

		if (!string.IsNullOrWhiteSpace(x.Title) && x.Title.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
		{
			return true;
		}

		return false;
	};

	protected override async Task OnInitializedAsync()
	{
		using var blogContext = await _dbContextFactory.CreateDbContextAsync();
		_posts = await blogContext.Posts.ToListAsync();
	}
}
